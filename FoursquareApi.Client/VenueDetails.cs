// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using FoursquareApi.Client;
//
//    var venueDetails = VenueDetails.FromJson(jsonString);

namespace FoursquareApi.Client
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class VenueDetailsResponse
    {
        [JsonProperty("meta")]
        public Meta Meta { get; set; }

        [JsonProperty("response")]
        public VenueDetails Response { get; set; }
    }

    /*
    public partial class Meta
    {
        [JsonProperty("code")]
        public long Code { get; set; }

        [JsonProperty("requestId")]
        public string RequestId { get; set; }
    }
    */

    public partial class VenueDetails
    {
        [JsonProperty("venue")]
        public VenueDetail VenueDetail { get; set; }
    }

    public partial class VenueDetail
    {
        [JsonProperty("id")]
        public string Id { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("contact")]
        public Contact Contact { get; set; }

        [JsonProperty("location")]
        public Location Location { get; set; }

        [JsonProperty("canonicalUrl")]
        public Uri CanonicalUrl { get; set; }

        [JsonProperty("categories")]
        public List<Category> Categories { get; set; }

        [JsonProperty("verified")]
        public bool Verified { get; set; }

        [JsonProperty("stats")]
        public Stats Stats { get; set; }

        [JsonProperty("url")]
        public Uri Url { get; set; }

        [JsonProperty("price")]
        public Price Price { get; set; }

        [JsonProperty("hasMenu")]
        public bool HasMenu { get; set; }

        [JsonProperty("likes")]
        public HereNow Likes { get; set; }

        [JsonProperty("dislike")]
        public bool Dislike { get; set; }

        [JsonProperty("ok")]
        public bool Ok { get; set; }

        [JsonProperty("rating")]
        public double Rating { get; set; }

        [JsonProperty("ratingColor")]
        public string RatingColor { get; set; }

        [JsonProperty("ratingSignals")]
        public long RatingSignals { get; set; }

        [JsonProperty("menu")]
        public Menu Menu { get; set; }

        [JsonProperty("allowMenuUrlEdit")]
        public bool AllowMenuUrlEdit { get; set; }

        [JsonProperty("beenHere")]
        public BeenHere BeenHere { get; set; }

        [JsonProperty("specials")]
        public Inbox Specials { get; set; }

        [JsonProperty("photos")]
        public Listed Photos { get; set; }

        [JsonProperty("reasons")]
        public Inbox Reasons { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("storeId")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long StoreId { get; set; }

        [JsonProperty("page")]
        public Page Page { get; set; }

        [JsonProperty("hereNow")]
        public HereNow HereNow { get; set; }

        [JsonProperty("createdAt")]
        public long CreatedAt { get; set; }

        [JsonProperty("tips")]
        public Listed Tips { get; set; }

        [JsonProperty("shortUrl")]
        public Uri ShortUrl { get; set; }

        [JsonProperty("timeZone")]
        public string TimeZone { get; set; }

        [JsonProperty("listed")]
        public Listed Listed { get; set; }

        [JsonProperty("hours")]
        public DefaultHours Hours { get; set; }

        [JsonProperty("popular")]
        public DefaultHours Popular { get; set; }

        [JsonProperty("seasonalHours")]
        public List<SeasonalHour> SeasonalHours { get; set; }

        [JsonProperty("defaultHours")]
        public DefaultHours DefaultHours { get; set; }

        [JsonProperty("pageUpdates")]
        public Inbox PageUpdates { get; set; }

        [JsonProperty("inbox")]
        public Inbox Inbox { get; set; }

        [JsonProperty("attributes")]
        public Attributes Attributes { get; set; }

        [JsonProperty("bestPhoto")]
        public BestPhoto BestPhoto { get; set; }

        [JsonProperty("colors")]
        public Colors Colors { get; set; }
    }

    public partial class Attributes
    {
        [JsonProperty("groups")]
        public List<AttributesGroup> Groups { get; set; }
    }

    public partial class AttributesGroup
    {
        [JsonProperty("type")]
        public string Type { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("summary", NullValueHandling = NullValueHandling.Ignore)]
        public string Summary { get; set; }

        [JsonProperty("count")]
        public long Count { get; set; }

        [JsonProperty("items")]
        public List<PurpleItem> Items { get; set; }
    }

    public partial class PurpleItem
    {
        [JsonProperty("displayName")]
        public string DisplayName { get; set; }

        [JsonProperty("displayValue")]
        public string DisplayValue { get; set; }

        [JsonProperty("priceTier", NullValueHandling = NullValueHandling.Ignore)]
        public long? PriceTier { get; set; }
    }

    public partial class BeenHere
    {
        [JsonProperty("count")]
        public long Count { get; set; }

        [JsonProperty("unconfirmedCount")]
        public long UnconfirmedCount { get; set; }

        [JsonProperty("marked")]
        public bool Marked { get; set; }

        [JsonProperty("lastCheckinExpiredAt")]
        public long LastCheckinExpiredAt { get; set; }
    }

    public partial class BestPhoto
    {
        [JsonProperty("id")]
        public string Id { get; set; }

        [JsonProperty("createdAt")]
        public long CreatedAt { get; set; }

        [JsonProperty("source")]
        public Source Source { get; set; }

        [JsonProperty("prefix")]
        public Uri Prefix { get; set; }

        [JsonProperty("suffix")]
        public string Suffix { get; set; }

        [JsonProperty("width")]
        public long Width { get; set; }

        [JsonProperty("height")]
        public long Height { get; set; }

        [JsonProperty("visibility")]
        public string Visibility { get; set; }

        [JsonProperty("user", NullValueHandling = NullValueHandling.Ignore)]
        public BestPhotoUser User { get; set; }
    }

    public partial class Source
    {
        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("url")]
        public Uri Url { get; set; }
    }

    public partial class BestPhotoUser
    {
        [JsonProperty("id")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long Id { get; set; }

        [JsonProperty("firstName")]
        public string FirstName { get; set; }

        [JsonProperty("photo")]
        public IconClass Photo { get; set; }

        [JsonProperty("lastName", NullValueHandling = NullValueHandling.Ignore)]
        public string LastName { get; set; }
    }

    public partial class IconClass
    {
        [JsonProperty("prefix")]
        public Uri Prefix { get; set; }

        [JsonProperty("suffix")]
        public string Suffix { get; set; }
    }

    /*
    public partial class Category
    {
        [JsonProperty("id")]
        public string Id { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("pluralName")]
        public string PluralName { get; set; }

        [JsonProperty("shortName")]
        public string ShortName { get; set; }

        [JsonProperty("icon")]
        public IconClass Icon { get; set; }

        [JsonProperty("primary")]
        public bool Primary { get; set; }
    }
    */

    public partial class Colors
    {
        [JsonProperty("highlightColor")]
        public HighlightTColor HighlightColor { get; set; }

        [JsonProperty("highlightTextColor")]
        public HighlightTColor HighlightTextColor { get; set; }

        [JsonProperty("algoVersion")]
        public long AlgoVersion { get; set; }
    }

    public partial class HighlightTColor
    {
        [JsonProperty("photoId")]
        public string PhotoId { get; set; }

        [JsonProperty("value")]
        public long Value { get; set; }
    }

    public partial class Contact
    {
        [JsonProperty("phone")]
        public string Phone { get; set; }

        [JsonProperty("formattedPhone")]
        public string FormattedPhone { get; set; }

        [JsonProperty("twitter")]
        public string Twitter { get; set; }

        [JsonProperty("instagram")]
        public string Instagram { get; set; }

        [JsonProperty("facebook")]
        public string Facebook { get; set; }

        [JsonProperty("facebookName")]
        public string FacebookName { get; set; }
    }

    public partial class DefaultHours
    {
        [JsonProperty("status")]
        public string Status { get; set; }

        [JsonProperty("richStatus")]
        public RichStatus RichStatus { get; set; }

        [JsonProperty("isOpen")]
        public bool IsOpen { get; set; }

        [JsonProperty("isLocalHoliday")]
        public bool IsLocalHoliday { get; set; }

        [JsonProperty("dayData", NullValueHandling = NullValueHandling.Ignore)]
        public List<object> DayData { get; set; }

        [JsonProperty("timeframes")]
        public List<Timeframe> Timeframes { get; set; }
    }

    public partial class RichStatus
    {
        [JsonProperty("entities")]
        public List<object> Entities { get; set; }

        [JsonProperty("text")]
        public string Text { get; set; }
    }

    public partial class Timeframe
    {
        [JsonProperty("days")]
        public string Days { get; set; }

        [JsonProperty("includesToday", NullValueHandling = NullValueHandling.Ignore)]
        public bool? IncludesToday { get; set; }

        [JsonProperty("open")]
        public List<Open> Open { get; set; }

        [JsonProperty("segments")]
        public List<object> Segments { get; set; }
    }

    public partial class Open
    {
        [JsonProperty("renderedTime")]
        public string RenderedTime { get; set; }
    }

    public partial class FluffyItem
    {
        [JsonProperty("id")]
        public string Id { get; set; }

        [JsonProperty("name", NullValueHandling = NullValueHandling.Ignore)]
        public string Name { get; set; }

        [JsonProperty("description", NullValueHandling = NullValueHandling.Ignore)]
        public string Description { get; set; }

        [JsonProperty("type", NullValueHandling = NullValueHandling.Ignore)]
        public string Type { get; set; }

        [JsonProperty("user", NullValueHandling = NullValueHandling.Ignore)]
        public ItemUser User { get; set; }

        [JsonProperty("editable", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Editable { get; set; }

        [JsonProperty("public", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Public { get; set; }

        [JsonProperty("collaborative", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Collaborative { get; set; }

        [JsonProperty("url", NullValueHandling = NullValueHandling.Ignore)]
        public string Url { get; set; }

        [JsonProperty("canonicalUrl", NullValueHandling = NullValueHandling.Ignore)]
        public Uri CanonicalUrl { get; set; }

        [JsonProperty("createdAt", NullValueHandling = NullValueHandling.Ignore)]
        public long? CreatedAt { get; set; }

        [JsonProperty("updatedAt", NullValueHandling = NullValueHandling.Ignore)]
        public long? UpdatedAt { get; set; }

        [JsonProperty("followers", NullValueHandling = NullValueHandling.Ignore)]
        public Tips Followers { get; set; }

        [JsonProperty("listItems", NullValueHandling = NullValueHandling.Ignore)]
        public Inbox ListItems { get; set; }

        [JsonProperty("source", NullValueHandling = NullValueHandling.Ignore)]
        public Source Source { get; set; }

        [JsonProperty("prefix", NullValueHandling = NullValueHandling.Ignore)]
        public Uri Prefix { get; set; }

        [JsonProperty("suffix", NullValueHandling = NullValueHandling.Ignore)]
        public string Suffix { get; set; }

        [JsonProperty("width", NullValueHandling = NullValueHandling.Ignore)]
        public long? Width { get; set; }

        [JsonProperty("height", NullValueHandling = NullValueHandling.Ignore)]
        public long? Height { get; set; }

        [JsonProperty("visibility", NullValueHandling = NullValueHandling.Ignore)]
        public string Visibility { get; set; }

        [JsonProperty("text", NullValueHandling = NullValueHandling.Ignore)]
        public string Text { get; set; }

        [JsonProperty("lang", NullValueHandling = NullValueHandling.Ignore)]
        public string Lang { get; set; }

        [JsonProperty("likes", NullValueHandling = NullValueHandling.Ignore)]
        public HereNow Likes { get; set; }

        [JsonProperty("logView", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LogView { get; set; }

        [JsonProperty("agreeCount", NullValueHandling = NullValueHandling.Ignore)]
        public long? AgreeCount { get; set; }

        [JsonProperty("disagreeCount", NullValueHandling = NullValueHandling.Ignore)]
        public long? DisagreeCount { get; set; }

        [JsonProperty("todo", NullValueHandling = NullValueHandling.Ignore)]
        public Tips Todo { get; set; }

        [JsonProperty("firstName", NullValueHandling = NullValueHandling.Ignore)]
        public string FirstName { get; set; }

        [JsonProperty("lastName", NullValueHandling = NullValueHandling.Ignore)]
        public string LastName { get; set; }

        [JsonProperty("photo", NullValueHandling = NullValueHandling.Ignore)]
        public IconClass Photo { get; set; }
    }

    public partial class HereNowGroup
    {
        [JsonProperty("type")]
        public string Type { get; set; }

        [JsonProperty("count")]
        public long Count { get; set; }

        [JsonProperty("items")]
        public List<FluffyItem> Items { get; set; }

        [JsonProperty("name", NullValueHandling = NullValueHandling.Ignore)]
        public string Name { get; set; }
    }

    public partial class HereNow
    {
        [JsonProperty("count")]
        public long Count { get; set; }

        [JsonProperty("summary")]
        public string Summary { get; set; }

        [JsonProperty("groups")]
        public List<HereNowGroup> Groups { get; set; }
    }

    public partial class Tips
    {
        [JsonProperty("count")]
        public long Count { get; set; }
    }

    public partial class Inbox
    {
        [JsonProperty("count")]
        public long Count { get; set; }

        [JsonProperty("items")]
        public List<InboxItem> Items { get; set; }
    }

    public partial class InboxItem
    {
        [JsonProperty("id", NullValueHandling = NullValueHandling.Ignore)]
        public string Id { get; set; }

        [JsonProperty("createdAt", NullValueHandling = NullValueHandling.Ignore)]
        public long? CreatedAt { get; set; }

        [JsonProperty("url", NullValueHandling = NullValueHandling.Ignore)]
        public Uri Url { get; set; }

        [JsonProperty("summary", NullValueHandling = NullValueHandling.Ignore)]
        public string Summary { get; set; }

        [JsonProperty("type", NullValueHandling = NullValueHandling.Ignore)]
        public string Type { get; set; }

        [JsonProperty("reasonName", NullValueHandling = NullValueHandling.Ignore)]
        public string ReasonName { get; set; }
    }

    public partial class ItemUser
    {
        [JsonProperty("id")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long Id { get; set; }

        [JsonProperty("firstName")]
        public string FirstName { get; set; }

        [JsonProperty("lastName", NullValueHandling = NullValueHandling.Ignore)]
        public string LastName { get; set; }

        [JsonProperty("photo")]
        public PurplePhoto Photo { get; set; }
    }

    public partial class PurplePhoto
    {
        [JsonProperty("prefix")]
        public Uri Prefix { get; set; }

        [JsonProperty("suffix")]
        public string Suffix { get; set; }

        [JsonProperty("default", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Default { get; set; }
    }

    public partial class Listed
    {
        [JsonProperty("count")]
        public long Count { get; set; }

        [JsonProperty("groups")]
        public List<HereNowGroup> Groups { get; set; }
    }

    /*
    public partial class Location
    {
        [JsonProperty("address")]
        public string Address { get; set; }

        [JsonProperty("lat")]
        public double Lat { get; set; }

        [JsonProperty("lng")]
        public double Lng { get; set; }

        [JsonProperty("labeledLatLngs")]
        public List<LabeledLatLng> LabeledLatLngs { get; set; }

        [JsonProperty("postalCode")]
        public string PostalCode { get; set; }

        [JsonProperty("cc")]
        public string Cc { get; set; }

        [JsonProperty("city")]
        public string City { get; set; }

        [JsonProperty("state")]
        public string State { get; set; }

        [JsonProperty("country")]
        public string Country { get; set; }

        [JsonProperty("formattedAddress")]
        public List<string> FormattedAddress { get; set; }
    }
    
    public partial class LabeledLatLng
    {
        [JsonProperty("label")]
        public string Label { get; set; }

        [JsonProperty("lat")]
        public double Lat { get; set; }

        [JsonProperty("lng")]
        public double Lng { get; set; }
    }
    */

    public partial class Menu
    {
        [JsonProperty("type")]
        public string Type { get; set; }

        [JsonProperty("label")]
        public string Label { get; set; }

        [JsonProperty("anchor")]
        public string Anchor { get; set; }

        [JsonProperty("url")]
        public Uri Url { get; set; }

        [JsonProperty("mobileUrl")]
        public Uri MobileUrl { get; set; }

        [JsonProperty("externalUrl")]
        public Uri ExternalUrl { get; set; }
    }

    public partial class Page
    {
        [JsonProperty("pageInfo")]
        public PageInfo PageInfo { get; set; }

        [JsonProperty("user")]
        public PageUser User { get; set; }
    }

    public partial class PageInfo
    {
        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("banner")]
        public Uri Banner { get; set; }

        [JsonProperty("links")]
        public Inbox Links { get; set; }
    }

    public partial class PageUser
    {
        [JsonProperty("id")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long Id { get; set; }

        [JsonProperty("firstName")]
        public string FirstName { get; set; }

        [JsonProperty("photo")]
        public IconClass Photo { get; set; }

        [JsonProperty("type")]
        public string Type { get; set; }

        [JsonProperty("tips")]
        public Tips Tips { get; set; }

        [JsonProperty("lists")]
        public Lists Lists { get; set; }

        [JsonProperty("bio")]
        public string Bio { get; set; }
    }

    public partial class Lists
    {
        [JsonProperty("groups")]
        public List<HereNowGroup> Groups { get; set; }
    }

    public partial class Price
    {
        [JsonProperty("tier")]
        public long Tier { get; set; }

        [JsonProperty("message")]
        public string Message { get; set; }

        [JsonProperty("currency")]
        public string Currency { get; set; }
    }

    public partial class SeasonalHour
    {
        [JsonProperty("seasonalRange")]
        public string SeasonalRange { get; set; }

        [JsonProperty("timeframes")]
        public List<Timeframe> Timeframes { get; set; }
    }

    public partial class Stats
    {
        [JsonProperty("tipCount")]
        public long TipCount { get; set; }
    }

    public partial class VenueDetails
    {
        public static VenueDetails FromJson(string json) => JsonConvert.DeserializeObject<VenueDetails>(json, FoursquareApi.Client.Converter.Settings);
    }
    
    /*
    public static class Serialize
    {
        public static string ToJson(this VenueDetails self) => JsonConvert.SerializeObject(self, FoursquareApi.Client.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }

    internal class ParseStringConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(long) || t == typeof(long?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            long l;
            if (Int64.TryParse(value, out l))
            {
                return l;
            }
            throw new Exception("Cannot unmarshal type long");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (long)untypedValue;
            serializer.Serialize(writer, value.ToString());
            return;
        }

        public static readonly ParseStringConverter Singleton = new ParseStringConverter();
    }
    */
}
